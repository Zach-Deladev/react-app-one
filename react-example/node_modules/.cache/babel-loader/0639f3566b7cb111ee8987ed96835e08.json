{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/workspace/react-app-one/react-example/src/components/MethosAsPropsParent.js\";\nimport React, { Component } from \"react\";\nimport MethodsAsPropsChild from \"./MethodsAsPropsChild\";\n\nclass MethodsAsPropsParent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSignIn = () => {\n      this.setState({\n        isLoggedIn: true\n      });\n      console.log(this);\n    };\n\n    this.state = {\n      isLoggedIn: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(MethodsAsPropsChild, {\n        isLoggedIn: this.state.isLoggedIn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default MethodsAsPropsParent;","map":{"version":3,"sources":["/workspace/react-app-one/react-example/src/components/MethosAsPropsParent.js"],"names":["React","Component","MethodsAsPropsChild","MethodsAsPropsParent","constructor","props","handleSignIn","setState","isLoggedIn","console","log","state","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,mBAAP,MAAgC,uBAAhC;;AAEA,MAAMC,oBAAN,SAAmCF,SAAnC,CAA6C;AAC3CG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAQnBC,YARmB,GAQJ,MAAM;AACnB,WAAKC,QAAL,CAAc;AACVC,QAAAA,UAAU,EAAE;AADF,OAAd;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACD,KAbkB;;AAGjB,SAAKC,KAAL,GAAa;AACXH,MAAAA,UAAU,EAAE;AADD,KAAb;AAGD;;AAUDI,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACE,QAAC,mBAAD;AAAqB,QAAA,UAAU,EAAE,KAAKD,KAAL,CAAWH;AAA5C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAvB0C;;AA0B7C,eAAeL,oBAAf","sourcesContent":["import React, { Component } from \"react\";\n\nimport MethodsAsPropsChild from \"./MethodsAsPropsChild\";\n\nclass MethodsAsPropsParent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoggedIn: false,\n    }\n  }\n\n  handleSignIn = () => {\n    this.setState({\n        isLoggedIn: true\n    })\n    console.log(this)\n  }\n\n\n  render() {\n    return (\n      <div>\n        <MethodsAsPropsChild isLoggedIn={this.state.isLoggedIn} />\n      </div>\n    );\n  }\n}\n\nexport default MethodsAsPropsParent;\n"]},"metadata":{},"sourceType":"module"}